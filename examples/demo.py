import binascii
import sys
from twisted.internet import reactor
from twisted.python import log
from txshark import TsharkService


class FMTPSnifferService(TsharkService):

    def packetReceived(self, packet):
        """Override the TsharkService method"""
        for layer in packet:
            if (layer.layer_name == 'fmtp' and
                    int(layer.type) == 1):
                # Data is stored as a hexadecimal string in the XML file
                # generated by tshark
                data = binascii.unhexlify(layer.data)
                log.msg("FMTP message received: {}".format(data))


def main():
    log.startLogging(sys.stdout)
    service = FMTPSnifferService(
        [{"name": "test.pcap", "filter": "tcp.port == 8501"}])
    service.startService()
    reactor.run()


if __name__ == "__main__":
    main()
